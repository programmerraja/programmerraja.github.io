{"version":3,"sources":["components/images/hot.png","components/images/map-pointer.png","components/images/sun.png","components/UserInput.js","components/WeatherResult.js","components/Header.js","App.js","index.js"],"names":["module","exports","UserInput","getInput","getWeather","id","TextField","fullWidth","label","onChange","Button","variant","color","onClick","WeatherResult","data","temp","Grid","container","justify","alignItems","item","xs","Typography","src","hot","width","height","alt","iconurl","description","map_pointer","location","message","Header","sun","App","props","state","bind","event","lat","lon","this","link","fetch","response","json","setState","iconcode","Math","floor","isip","target","value","latitude","longitude","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dc9beb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hot.044f71bb.png\";","module.exports = __webpack_public_path__ + \"static/media/map-pointer.88e10ef0.png\";","module.exports = __webpack_public_path__ + \"static/media/sun.4ca76975.png\";","import React from \"react\";\nimport \"./UserInput.css\";\nimport { TextField, Button } from \"@material-ui/core\";\n\nconst UserInput = ({ getInput, getWeather }) => (\n  <div id='search'>\n    <TextField fullWidth label='Enter City, Country' onChange={getInput} />\n    <Button\n      id='get-weather-button'\n      variant='contained'\n      color='secondary'\n      onClick={getWeather}\n    >\n      Get Weather\n    </Button>\n  </div>\n);\n\nexport default UserInput;\n","import React from \"react\";\nimport \"./WeatherResult.css\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport hot from \"./images/hot.png\";\nimport map_pointer from \"./images/map-pointer.png\";\n\nconst WeatherResult = ({ data }) => {\n  if (data?.temp) {\n    return (\n        <Grid container justify='center' alignItems='center' id='result-container'>\n          <Grid item xs={12}>\n            <Typography id='temperature'>\n              Current Temperature: {data.temp}&#176;C\n              <img src={hot} width='30px' height='30px' alt='temperature' />\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <img\n              src={data.iconurl}\n              alt='weather_icon'\n              width='120px'\n              height='120px'\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography id='description'>{data.description}</Typography>\n            <Typography id='location'>\n              <img\n                src={map_pointer}\n                width='30px'\n                height='30px'\n                alt='map_pointer'\n              />\n              {data.location}{\" \"}\n            </Typography>\n          </Grid>\n        </Grid>\n    );\n  }\n  if (data?.message) {\n    return (\n      <div id='result-container'>\n        <p id='message'>{data.message}</p>\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default WeatherResult;\n","import React from \"react\";\nimport \"./Header.css\";\nimport sun from \"./images/sun.png\";\n\nconst Header = () => (\n  <div id='header'>\n    <p> Weather App</p>\n    <img src={sun} height='40px' width='40px' alt='logo' />\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport UserInput from \"./components/UserInput\";\nimport WeatherResult from \"./components/WeatherResult\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    //settng the state\n    this.state = {\n      location: \"\",\n      temp: \"\",\n      iconurl: \"\",\n      description: \"\",\n      message: \"\",\n    };\n    //binding method to this\n    this.getInput = this.getInput.bind(this);\n    this.getWeather = this.getWeather.bind(this);\n    //calling the method to get the lat and log by using ip adress\n    this.getInput(0, 1);\n  }\n\n  async getWeather(event, lat, lon) {\n    let location = this.state.location;\n    var link;\n    if (location) {\n      link =\n        \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n        location +\n        \"&units=metric&appid=0ebf0e29926cc939f557a936228e1129\";\n    } else if (lat && lon) {\n      link =\n        \"https://api.openweathermap.org/data/2.5/weather?lat=\" +\n        lat +\n        \"&lon=\" +\n        lon +\n        \"&units=metric&appid=0ebf0e29926cc939f557a936228e1129\";\n    }\n    let response = await fetch(link);\n    let data = await response.json();\n    if (data[\"cod\"] === \"404\" || data[\"cod\"] === \"400\") {\n      this.setState({ message: data[\"message\"] });\n    } else if (data) {\n      let description = data[\"weather\"][0][\"description\"];\n      let location = data[\"name\"];\n      let iconcode = data[\"weather\"][0][\"icon\"];\n      let temp = Math.floor(data[\"main\"][\"temp\"]);\n\n      let iconurl = \"https://openweathermap.org/img/w/\" + iconcode + \".png\";\n      //setting hte state\n      this.setState({\n        temp: temp,\n        iconurl: iconurl,\n        description: description,\n        location: location,\n      });\n    }\n  }\n\n  async getInput(event, isip) {\n    if (event) {\n      let location = event.target.value;\n      if (location) {\n        this.setState({\n          location: location,\n          temp: \"\",\n          iconurl: \"\",\n          description: \"\",\n          message: \"\",\n        });\n      }\n    }\n    if (isip) {\n      //geting the user lat and lon using ip\n      const link = \"https://ipapi.co/json\";\n      let response = await fetch(link);\n      let data = await response.json();\n      if (data) {\n        let lat = data.latitude;\n        let lon = data.longitude;\n        this.getWeather(0, lat, lon);\n      }\n    }\n  }\n  render() {\n    return (\n      <Grid container justify='center' alignItems='center'>\n        <Grid item xs={12}>\n          <Header />\n        </Grid>\n        <Grid item xs={10} id='container' >\n          <UserInput getInput={this.getInput} getWeather={this.getWeather} />\n        </Grid>\n        <Grid item xs={10} >\n           <WeatherResult data={this.state} />\n        </Grid>\n      </Grid>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}