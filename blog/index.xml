<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programmerraja blog</title>
    <link>https://programmerraja.github.io/blog/</link>
    <description>Recent content on programmerraja blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Mar 2024 06:43:12 +0530</lastBuildDate><atom:link href="https://programmerraja.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Databases</title>
      <link>https://programmerraja.github.io/blog/notes/2024/databases/</link>
      <pubDate>Sun, 03 Mar 2024 07:34:21 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/databases/</guid>
      
      <description>ZippyDB ZippyDB is the largest strongly consistent, geographically distributed key-value store at Facebook.ZippyDB uses RocksDB as the underlying storage engine
Cassandra Cassandra is a wide-column NoSQL database management system. It was originally developed at Facebook to power the Facebook inbox search feature
FoundationDB FoundationDB is an open-source, distributed, transactional key-value store. It’s designed to handle large volumes of data and works well for both read/write workloads and write-heavy workloads. It’s also ACID-compliant.</description>
      
    </item>
    
    <item>
      <title>How to wireshark the mongodb</title>
      <link>https://programmerraja.github.io/blog/post/2024/how-to-wireshark-the-mongodb/</link>
      <pubDate>Mon, 12 Feb 2024 08:28:27 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/post/2024/how-to-wireshark-the-mongodb/</guid>
      
      <description>Run a nodejs program as node --tls-keylog=/tmp/tlskey index.js where the tls key will be stored on that path and add this tlskey path to wire shark to decrypt the msg by doing following
Go to Preferences-&amp;gt;Protocols-&amp;gt;TLS and edit the path as shown in the screenshot below. ![[Pasted image 20240212083026.png]]
Mongodb uses Mongodb wire protocol at application level to know more check here</description>
      
    </item>
    
    <item>
      <title>Design pattern</title>
      <link>https://programmerraja.github.io/blog/notes/2024/design-pattern/</link>
      <pubDate>Mon, 12 Feb 2024 07:09:05 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/design-pattern/</guid>
      
      <description>to rember the design pattern narrate it as real life story
resources https://youtu.be/taj_inLi-pY?si=2qu_7nqx6YRwX0Co
Crational Design pattern Once upon a time in the colorful land of Toyland, there were magical creatures known as Creators. Each Creator had a unique way of bringing toys to life, showcasing various creational design patterns.
Abstract Factory Pattern: The Artisan Workshop
In the heart of Toyland, there was an Artisan Workshop where the master toymaker, the Abstract Artisan, crafted a variety of toys.</description>
      
    </item>
    
    <item>
      <title>Software Architecture and Decision-Making</title>
      <link>https://programmerraja.github.io/blog/notes/2024/software-architecture-and-decision-making/</link>
      <pubDate>Mon, 22 Jan 2024 08:19:32 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/software-architecture-and-decision-making/</guid>
      
      <description>Book Core concepts It explains principles and concepts I believe a senior architect must understand deeply and discusses how to employ those principles to manage uncertainty
Books for leadership The Hard Things About Hard Things by Ben Horowitz, Trillion Dollar Coach by Eric Schmidt et al., Team of Teams: New Rules of Engagement for a Complex World by Stanley McChrystal Good Strategy, Bad Strategy by Richard Rumel Three layers of architecture of The Open Group Architecture Framework (TOGAF)</description>
      
    </item>
    
    <item>
      <title>React</title>
      <link>https://programmerraja.github.io/blog/notes/2024/react/</link>
      <pubDate>Sat, 20 Jan 2024 18:57:02 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/react/</guid>
      
      <description>Notes Context function App() { return ( &amp;lt;div className=&amp;#34;App&amp;#34;&amp;gt; &amp;lt;AdaptivityProvider&amp;gt; &amp;lt;Child1 /&amp;gt; &amp;lt;Child2 /&amp;gt; &amp;lt;/AdaptivityProvider&amp;gt; &amp;lt;/div&amp;gt; ); } let child1 = 0; let child2 = 0; function Child1() { //TO Consume const { width } = useSize(); child1 += 1; return &amp;lt;p&amp;gt;{child1}&amp;lt;/p&amp;gt;; } function Child2() { const { isMobile } = useMobile(); child2 += 1; return &amp;lt;p&amp;gt;{child2}&amp;lt;/p&amp;gt;; } //create context const SizeContext = createContext({}); const MobileContext = createContext({}); //create provider export const Provider = (props) =&amp;gt; { const [width, setWidth] = useState(window.</description>
      
    </item>
    
    <item>
      <title>A Philosophy of Software Design Book Notes</title>
      <link>https://programmerraja.github.io/blog/notes/2024/a-philosophy-of-software-design-book-notes/</link>
      <pubDate>Thu, 18 Jan 2024 08:19:32 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/a-philosophy-of-software-design-book-notes/</guid>
      
      <description>The Nature of Complexity Complexity is anything related to the structure of a software systemthat makes it hard to understand and modify the system.
Symptoms of complexity Change amplification: The first symptom of complexity is that a seemingly simple change requires code modifications in many different places. Cognitive load: how much a developer needs to know in order to complete a task Unknown unknowns: it is not obvious which pieces of code must be modified to complete a task, or whatinformation a developer must have to carry out the task successfully Strategic vs.</description>
      
    </item>
    
    <item>
      <title>Android internal Notes</title>
      <link>https://programmerraja.github.io/blog/notes/2024/android-internal/</link>
      <pubDate>Wed, 17 Jan 2024 08:19:32 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/android-internal/</guid>
      
      <description>File system Android devices typically have a partitioned storage system, where the storage is divided into different partitions, each serving a specific purpose.
/system: This directory contains the Android operating system and system applications. It is read-only to ensure the integrity of the system. Modifying files in this directory could potentially harm the device.
/app: prebundled apps from Google, as well as any vendor or carrier-installed apps /bin: various daemons, as well as shell commands contain bootanimation,dalvikvm, adb, etc.</description>
      
    </item>
    
    <item>
      <title>Linux Notes</title>
      <link>https://programmerraja.github.io/blog/notes/2024/linux-notes/</link>
      <pubDate>Wed, 17 Jan 2024 08:19:32 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/linux-notes/</guid>
      
      <description></description>
      
    </item>
    
    <item>
      <title>Docker Notes</title>
      <link>https://programmerraja.github.io/blog/notes/2024/docker/</link>
      <pubDate>Mon, 15 Jan 2024 08:19:32 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/docker/</guid>
      
      <description>Docker Engine When you install Docker, you get two major components:
Docker client →is a command-line tool used to interact with the Docker Engine, Docker daemon (sometimes called “server” or “engine”) In a default Linux installation, the client talks to the daemon via a local IPC/Unix socket at /var/run/docker.sock The Docker engine is the core software that runs and manages containers.The Docker Engine is made from many specialized tools that work together to create and run containers APIs, execution driver, runtime (create containers) , shims, containerd (to manage container lifecycle operations — start | stop | pause | rm.</description>
      
    </item>
    
    <item>
      <title>Database internal book Notes</title>
      <link>https://programmerraja.github.io/blog/notes/2024/database-internal/</link>
      <pubDate>Fri, 12 Jan 2024 08:19:32 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/database-internal/</guid>
      
      <description>Storage Engines The storage engine (or database engine) is a software component of a database man‐ agement system responsible for storing, retrieving, and managing data in memory and on disk, designed to capture a persistent, long-term memory of each node.
Storage engines such as BerkeleyDB, LevelDB and its descendant RocksDB, LMDB and its descendant libmdbx, Sophia, HaloDB,
Row-Oriented Data Layout Row-oriented database management systems store data in records or rows. Their layout is quite close to the tabular data representation, where every row has the same set of fields.</description>
      
    </item>
    
    <item>
      <title>MicroServices</title>
      <link>https://programmerraja.github.io/blog/notes/2024/microservices/</link>
      <pubDate>Fri, 12 Jan 2024 08:19:32 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/microservices/</guid>
      
      <description>Questions to be asked
How will new service be deployed and upgraded how will it be consumed by the rest of the system Service registery -&amp;gt; Eureka
Where single service when new service it inform to service regis and who want to lookup it ask for service regis single point of failure we need to write code on each service Service Mesh -&amp;gt; TO solve the above problem
use side car and control tower (mange the sidecar ) no need to write a single code example -&amp;gt; envoy(sidecar),istio(control tower)</description>
      
    </item>
    
    <item>
      <title>Networking Notes</title>
      <link>https://programmerraja.github.io/blog/notes/2024/networking/</link>
      <pubDate>Fri, 12 Jan 2024 08:19:32 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/networking/</guid>
      
      <description>OSI Model The Open Systems Interconnection (OSI) model describes seven layers that computer systems use to communicate over a network.
Application Layer (Htttp,DHCP,FMTP,Telnet,NFS) Presentation Layer (Encryption,Data format,Data compression,ASCII to Bin) Session Layer (TCP/IP socket authentication RTCP protocol) Transport Layer (Process level addressing TCP/UDP, Multiplexing,demultiplexing,segmentation,connection establishment) Network Layer (logical addressing IP , Routing, packet encapsulation) Data Link Layer (LAN,MAC,Data framing,Error detection) Physical Layer (Converting Bin to singals to transfer the data) Application Layer HTTP/HTTPS Is the protocol used to communicate with server.</description>
      
    </item>
    
    <item>
      <title>Nginx Notes</title>
      <link>https://programmerraja.github.io/blog/notes/2024/nginx/</link>
      <pubDate>Wed, 10 Jan 2024 08:19:32 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/nginx/</guid>
      
      <description>Each request handled by each process</description>
      
    </item>
    
    <item>
      <title>Go</title>
      <link>https://programmerraja.github.io/blog/notes/2024/go/</link>
      <pubDate>Mon, 01 Jan 2024 11:39:28 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/go/</guid>
      
      <description>Introduction From c++ by google c++ author will convert to exe
go get githublink→ to download pkg and put under folder pkg
it has main function to run go run filename.go
package main //-&amp;gt; our package name imort &amp;#34;fmt&amp;#34; import (&amp;#34;fmt&amp;#34;,&amp;#34;math&amp;#34;) //-&amp;gt; to import multiple pkg func main(){ fmt.Println(&amp;#34;hello&amp;#34;) } Data types string, bool, int, byte , float32 ,float64, arrays
using var keyword and const → to not reassign
var name string = “d” (if directly assing vaule we don’t need to mention the data type)</description>
      
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>https://programmerraja.github.io/blog/notes/2024/kubernetes/</link>
      <pubDate>Mon, 01 Jan 2024 08:19:32 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/kubernetes/</guid>
      
      <description>Kubernetes is two things A cluster for running applications An orchestrator of cloud-native microservices apps Kubernetes cluster ![[Pasted image 20240312073714.png]]
A Kubernetes cluster contains six main components:
API server: Exposes a REST interface to all Kubernetes resources. Serves as the front end of the Kubernetes control plane. Scheduler: Places containers according to resource requirements and metrics. Makes note of Pods with no assigned node, and selects nodes for them to run on.</description>
      
    </item>
    
    <item>
      <title>Learning from blog</title>
      <link>https://programmerraja.github.io/blog/notes/2024/learning-from-blog/</link>
      <pubDate>Mon, 01 Jan 2024 08:19:32 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2024/learning-from-blog/</guid>
      
      <description>How LinkedIn Adopted Protocol Buffers to Reduce Latency by 60% They heavly using microservice to avoid the latency between the service they go with protocol buffers Protocol buffer (Protobuf) is a data serialization format and a set of tools to exchange data. Protobuf keeps data and the metadata separate. And serializes data into binary format. Use Protobuf when: Payload is big Communication between non-JavaScript environments needed Frequent changes to the payload schema expected Scaling Slack’s Job Queue They using redis queue for all async operation they have face few issue with that such as Operational Memory Constraints in Redis, Complex Redis Connection Structure ,Worker Scalability Dependency on Redis etc Instead fully replace with kafa they go step by step.</description>
      
    </item>
    
    <item>
      <title>RabbitMQ Notes</title>
      <link>https://programmerraja.github.io/blog/notes/2023/rabbitmq/</link>
      <pubDate>Fri, 08 Dec 2023 18:26:15 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2023/rabbitmq/</guid>
      
      <description>What is RabbitMQ? RabbitMQ is a popular open-source message broker that implements the AMQP (Advanced Message Queuing Protocol) standard.
Channel A channel is a separate communication channel within a single connection. Channels allow multiple concurrent exchanges to be executed in parallel, providing a way to separate different parts of your application.
Each channel has its own set of resources, such as queues, exchanges, and bindings, which are independent of the resources used by other channels in the same connection.</description>
      
    </item>
    
    <item>
      <title>Hello world</title>
      <link>https://programmerraja.github.io/blog/post/2023/helloworld/</link>
      <pubDate>Sun, 03 Dec 2023 09:44:50 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/post/2023/helloworld/</guid>
      
      <description>Hi, I&amp;rsquo;m K.Boopathi! 👋 About Me I&amp;rsquo;m a passionate programmer with an insatiable curiosity for exploring diverse technologies and leveraging them to create cutting-edge products. My journey in the realm of tech is driven by a fervent desire to learn and innovate.
What I Do My blog is a reflection of my love for web development, offering insightful content, tutorials, and invaluable resources. I&amp;rsquo;m dedicated to sharing my knowledge and experiences, empowering aspiring developers to embark on their own coding adventures.</description>
      
    </item>
    
    <item>
      <title>MongoDB Performance Tuning Book Notes</title>
      <link>https://programmerraja.github.io/blog/notes/2023/mongodb-performance-tuning/</link>
      <pubDate>Sun, 03 Dec 2023 09:44:50 +0530</pubDate>
      
      <guid>https://programmerraja.github.io/blog/notes/2023/mongodb-performance-tuning/</guid>
      
      <description>MongoDB Architecture and Concepts if the write concern is set to “majority”, then the database will not complete the write operation until a majority of secondaries receive the write. We can also set the write concern to wait until all secondaries or a specific number of secondaries receive the write operation.
Oplog The primary node stores information about document changes in a collection within its local database called the Oplog. The primary will continuously attempt to apply these changes to secondary instances.</description>
      
    </item>
    
    <item>
      <title></title>
      <link>https://programmerraja.github.io/blog/excalidraw/art-2024-01-19-19.56.09/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://programmerraja.github.io/blog/excalidraw/art-2024-01-19-19.56.09/</guid>
      
      <description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements %%
Drawing { &amp;#34;type&amp;#34;: &amp;#34;excalidraw&amp;#34;, &amp;#34;version&amp;#34;: 2, &amp;#34;source&amp;#34;: &amp;#34;https://github.com/zsviczian/obsidian-excalidraw-plugin/releases/tag/2.0.13&amp;#34;, &amp;#34;elements&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;lbilyLsh&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;, &amp;#34;x&amp;#34;: -251, &amp;#34;y&amp;#34;: -134.0234375, &amp;#34;width&amp;#34;: 137.2798614501953, &amp;#34;height&amp;#34;: 25, &amp;#34;angle&amp;#34;: 0, &amp;#34;strokeColor&amp;#34;: &amp;#34;#1e1e1e&amp;#34;, &amp;#34;backgroundColor&amp;#34;: &amp;#34;transparent&amp;#34;, &amp;#34;fillStyle&amp;#34;: &amp;#34;solid&amp;#34;, &amp;#34;strokeWidth&amp;#34;: 2, &amp;#34;strokeStyle&amp;#34;: &amp;#34;solid&amp;#34;, &amp;#34;roughness&amp;#34;: 1, &amp;#34;opacity&amp;#34;: 100, &amp;#34;groupIds&amp;#34;: [], &amp;#34;frameId&amp;#34;: null, &amp;#34;roundness&amp;#34;: null, &amp;#34;seed&amp;#34;: 300057372, &amp;#34;version&amp;#34;: 2, &amp;#34;versionNonce&amp;#34;: 157007772, &amp;#34;isDeleted&amp;#34;: true, &amp;#34;boundElements&amp;#34;: null, &amp;#34;updated&amp;#34;: 1705674402817, &amp;#34;link&amp;#34;: null, &amp;#34;locked&amp;#34;: false, &amp;#34;text&amp;#34;: &amp;#34;CTRL+Shift+V&amp;#34;, &amp;#34;rawText&amp;#34;: &amp;#34;CTRL+Shift+V&amp;#34;, &amp;#34;fontSize&amp;#34;: 20, &amp;#34;fontFamily&amp;#34;: 1, &amp;#34;textAlign&amp;#34;: &amp;#34;left&amp;#34;, &amp;#34;verticalAlign&amp;#34;: &amp;#34;top&amp;#34;, &amp;#34;baseline&amp;#34;: 18, &amp;#34;containerId&amp;#34;: null, &amp;#34;originalText&amp;#34;: &amp;#34;CTRL+Shift+V&amp;#34;, &amp;#34;lineHeight&amp;#34;: 1.</description>
      
    </item>
    
    <item>
      <title></title>
      <link>https://programmerraja.github.io/blog/excalidraw/art-2024-01-25-14.32.40/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://programmerraja.github.io/blog/excalidraw/art-2024-01-25-14.32.40/</guid>
      
      <description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements ENVOY ^OJ0WhMt5
%%
Drawing { &amp;#34;type&amp;#34;: &amp;#34;excalidraw&amp;#34;, &amp;#34;version&amp;#34;: 2, &amp;#34;source&amp;#34;: &amp;#34;https://github.com/zsviczian/obsidian-excalidraw-plugin/releases/tag/2.0.13&amp;#34;, &amp;#34;elements&amp;#34;: [ { &amp;#34;id&amp;#34;: &amp;#34;bQU-nPEaqRqMW7UBezHk9&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;rectangle&amp;#34;, &amp;#34;x&amp;#34;: -187.45735692977905, &amp;#34;y&amp;#34;: -205.67471599578857, &amp;#34;width&amp;#34;: 660.553466796875, &amp;#34;height&amp;#34;: 404.21929931640625, &amp;#34;angle&amp;#34;: 0, &amp;#34;strokeColor&amp;#34;: &amp;#34;#1e1e1e&amp;#34;, &amp;#34;backgroundColor&amp;#34;: &amp;#34;transparent&amp;#34;, &amp;#34;fillStyle&amp;#34;: &amp;#34;solid&amp;#34;, &amp;#34;strokeWidth&amp;#34;: 2, &amp;#34;strokeStyle&amp;#34;: &amp;#34;solid&amp;#34;, &amp;#34;roughness&amp;#34;: 1, &amp;#34;opacity&amp;#34;: 100, &amp;#34;groupIds&amp;#34;: [], &amp;#34;frameId&amp;#34;: null, &amp;#34;roundness&amp;#34;: { &amp;#34;type&amp;#34;: 3 }, &amp;#34;seed&amp;#34;: 1976162072, &amp;#34;version&amp;#34;: 25, &amp;#34;versionNonce&amp;#34;: 432148248, &amp;#34;isDeleted&amp;#34;: false, &amp;#34;boundElements&amp;#34;: null, &amp;#34;updated&amp;#34;: 1706173366594, &amp;#34;link&amp;#34;: null, &amp;#34;locked&amp;#34;: false }, { &amp;#34;id&amp;#34;: &amp;#34;OJ0WhMt5&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;, &amp;#34;x&amp;#34;: -118.</description>
      
    </item>
    
    <item>
      <title></title>
      <link>https://programmerraja.github.io/blog/excalidraw/art-2024-02-11-07.27.35/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://programmerraja.github.io/blog/excalidraw/art-2024-02-11-07.27.35/</guid>
      
      <description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
%%
Drawing {&amp;#34;type&amp;#34;:&amp;#34;excalidraw&amp;#34;,&amp;#34;version&amp;#34;:2,&amp;#34;source&amp;#34;:&amp;#34;https://github.com/zsviczian/obsidian-excalidraw-plugin/releases/tag/2.0.13&amp;#34;,&amp;#34;elements&amp;#34;:[],&amp;#34;appState&amp;#34;:{&amp;#34;gridSize&amp;#34;:null,&amp;#34;viewBackgroundColor&amp;#34;:&amp;#34;#ffffff&amp;#34;}} %%</description>
      
    </item>
    
    <item>
      <title>Search</title>
      <link>https://programmerraja.github.io/blog/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://programmerraja.github.io/blog/search/</guid>
      
      <description></description>
      
    </item>
    
  </channel>
</rss>
