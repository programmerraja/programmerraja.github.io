{"version":3,"sources":["components/Nav/index.js","components/Footer/index.js","components/SquareLoader/index.js","components/StateCard/index.js","components/NoResultCard/index.js","utils/coronaService.js","utils/API.js","utils/stateNames.js","pages/Home/index.js","components/Table/index.js","pages/StateDetail/index.js","pages/NotFound/index.js","App.js","index.js"],"names":["Nav","user","nav_ref","createRef","crosslines_ref","line_ref","toggle","current","classList","className","to","class","onClick","ref","Footer","id","SquareLoader","props","position","style","loading","display","marginTop","StateCard","state_short_name","state_name","districts","confirmed","recovered","deceased","population","useState","d_confirmed","setConfirmed","d_recovered","setRecovered","d_deceased","setDeceased","selected_district","setSelectedDistrict","history","useHistory","useEffect","onChange","e","target","value","district_name","name","total","ChangeToDistrictData","Object","keys","map","selected","color","localStorage","setItem","JSON","stringify","push","storeToLocalStorage","NoResultCard","msg","getStates","axios","get","getStatesByDate","coronaService","AN","AP","AR","AS","BR","CH","CT","DL","DN","GA","GJ","HP","HR","JH","JK","KA","KL","LA","LD","MH","ML","MN","MP","MZ","NL","OR","PB","PY","RJ","SK","TG","TN","TR","TT","UN","UP","UT","WB","Home","states","setStates","search_state","setSearchState","filter_date","setFilterDate","sort_by","setSortBy","setMsg","setLoading","API","then","res","data","catch","states_card","state","isHide","STATE_NAMES","meta","type","new_states","isFind","toLowerCase","startsWith","filterState","placeholder","Date","new_state","empty_data","forEach","console","log","states_meta","states_names","sort","vaccinated1","vaccinated2","key","split","i","length","j","temp","sortByConfirmed","sortByAffected","sortByVaccinated","new_sorted_states","sortByUserPreference","Table","state_data","scope","rows","date","delta","decease","delta7","confired","recoveed","StateDetail","setStateData","setDistricts","setPopulation","is_find","setIsFind","STATE_NAME","useParams","temp_state_data","temp_district","parse","getItem","temp_population","states_date","new_sorted_state_data","search_date","filterStateByDate","NotFound","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"2VAmDeA,MAzCf,YAAqB,EAAPC,KAAQ,IAEdC,EAAQC,sBACRC,EAAeD,sBACfE,EAASF,sBAGf,SAASG,IACPJ,EAAQK,QAAQC,UAAUF,OAAO,iBACjCF,EAAeG,QAAQC,UAAUF,OAAO,mBACxCD,EAASE,QAAQC,UAAUF,OAAO,cAMpC,OAAS,sBAAKG,UAAU,MAAf,UACG,qBAAKA,UAAU,YAAf,SACM,cAAC,IAAD,CAAMC,GAAG,IAAT,SACQ,8BAAG,mBAAGC,MAAM,wBAAZ,iBAAoD,mBAAGA,MAAM,+BAI3E,sBAAKF,UAAU,QAAQG,QAASN,EAAQO,IAAKR,EAA7C,UACE,qBAAKI,UAAU,cAEf,qBAAKA,UAAU,cAEf,qBAAKA,UAAU,iBAIjB,qBAAKA,UAAU,WAAWI,IAAKX,EAA/B,SACE,qBAAKO,UAAU,aAAaG,QAASN,EAAQO,IAAKT,U,MC/BnDU,MATf,WAEA,OACC,qBAAKL,UAAU,mBAAmBM,GAAG,WAArC,SACI,qBAAKN,UAAU,YAAf,oE,aCkBUO,MArBf,SAAsBC,GACpB,OACE,qBACER,UACEQ,EAAMC,SAAW,iCAAmC,iBAEtDC,MACEF,EAAMG,QAAN,aACMC,QAAS,OAAQC,UAAW,KAAQL,EAAME,OADhD,aAEME,QAAS,QAAWJ,EAAME,OAPpC,SAUE,sBAAKV,UAAU,gBAAf,UACE,wBACA,wBACA,8B,mBC2EOc,MAzFf,YAQqB,IAPDC,EAOA,EAPAA,iBACAC,EAMA,EANAA,WACAC,EAKA,EALAA,UACAC,EAIA,EAJAA,UACAC,EAGA,EAHAA,UACAC,EAEA,EAFAA,SACAC,EACA,EADAA,WAIhB,EAAiCC,mBAASJ,GAA1C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAiCF,mBAASH,GAA1C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAA+BJ,mBAASF,GAAxC,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA8CN,mBAAS,QAAvD,mBAAOO,EAAP,KAAyBC,EAAzB,KAEMC,EAAQC,cA+BhB,OA7BEC,qBAAU,WACNT,EAAaN,GACbQ,EAAaP,GACbS,EAAYR,KACd,CAACF,EAAUC,EAAUC,IA0BvB,mCACI,sBAAKpB,UAAU,aAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,4BAAIgB,IACJ,yBAAQhB,UAAU,oBACRkC,SAAU,SAACC,GACPL,EAAoBK,EAAEC,OAAOC,OA7B5B,SAACC,GACxB,IAAI,IAAMC,KAAQtB,EACXsB,IAAOD,IACPd,EAAaP,EAAUsB,GAAMC,MAAMtB,UAAUD,EAAUsB,GAAMC,MAAMtB,UAAU,kBAC7EQ,EAAaT,EAAUsB,GAAMC,MAAMrB,UAAUF,EAAUsB,GAAMC,MAAMrB,UAAU,kBAC7ES,EAAYX,EAAUsB,GAAMC,MAAMpB,SAASH,EAAUsB,GAAMC,MAAMpB,SAAS,mBAI9D,SAAhBkB,IACCd,EAAaN,GACbQ,EAAaP,GACbS,EAAYR,IAkBMqB,CAAqBN,EAAEC,OAAOC,QAH5C,UAKK,wBAAQA,MAAM,OAAd,kBAGIpB,GAAayB,OAAOC,KAAK1B,GAAW2B,KAAI,SAACN,GACtC,OAAO,wBAAQD,MAAOC,EAAeO,SAAUhB,IAAoBS,EAA5D,SAAuFA,aAMlH,sBAAKtC,UAAU,qBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,sCACA,8BAAG,mBAAGE,MAAM,sBAAsBQ,MAAO,CAACoC,MAAM,WAAhD,cAA0EvB,KAC1E,8BAAG,mBAAGrB,MAAM,mBAAmBQ,MAAO,CAACoC,MAAM,WAA7C,cAAuErB,KACvE,8BAAG,mBAAGvB,MAAM,4BAA4BQ,MAAO,CAACoC,MAAM,SAAtD,aAA6EnB,QAEjF,qBAAK3B,UAAU,kBAAf,SACI,8BACA,mBAAGE,MAAM,sBACNC,QAAS,YArCE,SAACY,GACvBgC,aAAaC,QAAQ,YAAYC,KAAKC,UAAUjC,IAChD8B,aAAaC,QAAQ,aAAa3B,GAElCU,EAAQoB,KAAR,WAAiBpC,IAkCLqC,CAAoBrC,mB,MCtEzBsC,MATf,YAA6B,IAANC,EAAK,EAALA,IACrB,OACM,qBAAKtD,UAAU,gBAAf,SACI,4BAAIsD,O,iBCLD,GACbC,UAAU,WACR,OAAOC,IAAMC,IAAI,uDAEnBC,gBAAgB,WACd,OAAOF,IAAMC,IAAI,8DCHN,GACbF,UAAUI,EAAcJ,UACxBG,gBAAgBC,EAAcD,iBCNlB,GACVE,GAAI,8BACJC,GAAI,iBACJC,GAAI,oBACJC,GAAI,QACJC,GAAI,QACJC,GAAI,aACJC,GAAI,eACJC,GAAI,QACJC,GAAI,2CACJC,GAAI,MACJC,GAAI,UACJC,GAAI,mBACJC,GAAI,UACJC,GAAI,YACJC,GAAI,oBACJC,GAAI,YACJC,GAAI,SACJC,GAAI,SACJC,GAAI,cACJC,GAAI,cACJC,GAAI,YACJC,GAAI,UACJC,GAAI,iBACJC,GAAI,UACJC,GAAI,WACJC,GAAI,SACJC,GAAI,SACJC,GAAI,aACJC,GAAI,YACJC,GAAI,SACJC,GAAI,YACJC,GAAI,aACJC,GAAI,UACJC,GAAG,sBACHC,GAAI,mBACJC,GAAI,gBACJC,GAAI,cACJC,GAAI,eC4NOC,MArPf,WAEI,MAAwB5E,mBAAS,IAAjC,mBAAM6E,EAAN,KAAaC,EAAb,KACA,EAAmC9E,mBAAS,IAA5C,mBAAM+E,EAAN,KAAmBC,EAAnB,KACA,EAAiChF,mBAAS,IAA1C,mBAAMiF,EAAN,KAAkBC,EAAlB,KACA,EAAyBlF,mBAAS,IAAlC,mBAAMmF,EAAN,KAAcC,EAAd,KACA,EAAkBpF,mBAAS,IAA3B,mBAAMgC,EAAN,KAAUqD,EAAV,KAEA,EAA2BrF,oBAAS,GAApC,mBAAOX,EAAP,KAAeiG,EAAf,KAEA3E,qBAAU,WACR4E,EAAItD,YACHuD,MAAK,SAACC,GACHH,GAAW,GACXR,EAAUW,EAAIC,SAEjBC,OAAM,SAACF,GACNH,GAAW,QAGf,IAEF,IAuJMM,EAAY,GAgBhB,OAdFxE,OAAOC,KAAKwD,GAAQvD,KAAI,SAACuE,GAEG,IAAD,kBAArBhB,EAAOgB,GAAOC,QACjBF,EAAY/D,KAAK,cAAC,EAAD,CACRpC,iBAAkBoG,EAClBnG,WAAYqG,EAAYF,GACxBlG,UAAS,UAAEkF,EAAOgB,UAAT,aAAE,EAAelG,UAC1BC,UAAS,UAAEiF,EAAOgB,UAAT,iBAAE,EAAe3E,aAAjB,aAAE,EAAsBtB,UACjCC,UAAS,UAAEgF,EAAOgB,UAAT,iBAAE,EAAe3E,aAAjB,aAAE,EAAsBrB,UACjCC,SAAQ,UAAE+E,EAAOgB,UAAT,iBAAE,EAAe3E,aAAjB,aAAE,EAAsBpB,SAChCC,WAAU,UAAE8E,EAAOgB,UAAT,iBAAE,EAAeG,YAAjB,aAAE,EAAqBjG,iBAIlC,qCACC,cAAC,EAAD,CAAeV,QAASA,IACxB,0BAASX,UAAU,mBAAnB,UACM,uBAAOuH,KAAK,OACLhF,KAAK,eACLvC,UAAU,eACVkC,SAAU,SAACC,GACRmE,EAAenE,EAAEC,OAAOC,OA9KlC,SAACgE,GACjB,IAAImB,EAAW,eAAIrB,GACfsB,GAAO,EACX/E,OAAOC,KAAKwD,GAAQvD,KAAI,SAACuE,GACpBE,EAAYF,GAAOO,cAAcC,WAAWtB,EAAaqB,gBAC1DD,GAAO,EACPD,EAAWL,GAAOC,QAAO,GAEzBI,EAAWL,GAAOC,QAAO,EAE3BhB,EAAU,eAAIoB,IAEVC,GACFd,EAAO,2BAAD,OAA4BN,OAkKZuB,CAAYzF,EAAEC,OAAOC,QAGxBA,MAAOgE,EACPwB,YAAY,mBAEnB,uBAAON,KAAK,OACLhF,KAAK,OACLvC,UAAU,cACV6H,YAAY,iBACZxF,MAAOkE,EACPrE,SAAU,SAACC,GACNqE,EAAcrE,EAAEC,OAAOC,OAxK/B,SAACkE,GAClB,IAAIuB,KAAKvB,GAAa,IAAIuB,KAAK,eAAiB,IAAIA,KAAK,cAAc,IAAIA,KAAKvB,IAEjFK,GAAW,GACXC,EAAInD,kBACDoD,MAAK,SAACC,GACHH,GAAW,GACX,IAAImB,EAAU,GACVC,EAAW,CAACxF,MAAM,CAACtB,UAAU,iBAAiBC,UAAU,iBAAiBC,SAAS,mBACtFsB,OAAOC,KAAKoE,EAAIC,MAAMiB,SAAQ,SAACd,GAAS,IAAD,EAErCY,EAAUZ,GAAOJ,EAAIC,KAAKG,GAAT,MAAyBZ,GAAaQ,EAAIC,KAAKG,GAAT,MAAyBZ,GAAayB,EAE7FD,EAAUZ,GAAV,mCAAkChB,EAAOgB,UAAzC,aAAkC,gBAGpCf,EAAU2B,MAEbd,OAAM,SAACF,GACNH,GAAW,GACXsB,QAAQC,IAAIpB,QAGhBX,EAAU,IACVO,EAAO,wDAiJmBjD,CAAgBvB,EAAEC,OAAOC,UAIrC,sBAAKrC,UAAU,wBAAf,UACI,uBAAOA,UAAU,sBAAjB,SACO,+CACP,yBACIA,UAAU,gBACVkC,SAAU,SAACC,GACTuE,EAAUvE,EAAEC,OAAOC,OAjGpB,SAACoE,GAC1B,GAAGA,EAAQ,CACP,IAAI2B,EAAY,GACZC,EAAa,GAEjB3F,OAAOC,KAAKwD,GAAQmC,OAAOL,SAAQ,SAAAjH,GAG9BmF,EAAOnF,IAAemF,EAAOnF,GAAP,QACnBmF,EAAOnF,GAAP,QACFmF,EAAOnF,GAAP,MAA4B,CAACE,UAAU,EAAEqH,YAAY,EAAEC,YAAY,IAEjErC,EAAOnF,GAAP,kBACFmF,EAAOnF,GAAP,gBAAyC,GAEvCmF,EAAOnF,GAAP,iBACFmF,EAAOnF,GAAP,eAAwC,GAEtCmF,EAAOnF,GAAP,kBACFmF,EAAOnF,GAAP,gBAAyC,IAG7CqH,EAAalF,KAAKnC,GAClBoH,EAAYjF,KAAKgD,EAAOnF,OAG1B,IAAIyH,EAAIhC,EAAQiC,MAAM,KACV,cAATD,EAAI,GAlFS,SAACL,EAAYC,EAAaI,GAC9C,IAAI,IAAIE,EAAE,EAAEA,EAAEP,EAAYQ,OAAOD,IAC/B,IAAI,IAAIE,EAAE,EAAEA,EAAET,EAAYQ,OAAOC,IAAI,CAAC,IAAD,IACnC,IAAG,UAAAT,EAAYO,GAAGnG,aAAf,eAAuBiG,EAAI,MAA3B,UAA+BL,EAAYS,GAAGrG,aAA9C,aAA+B,EAAuBiG,EAAI,KAAI,CAE/D,IAAIK,EAAKV,EAAYO,GACrBP,EAAYO,GAAGP,EAAYS,GAC3BT,EAAYS,GAAGC,EAEfA,EAAKT,EAAaM,GAClBN,EAAaM,GAAGN,EAAaQ,GAC7BR,EAAaQ,GAAGC,IAwEdC,CAAgBX,EAAYC,EAAaI,GAE5B,aAATA,EAAI,GApEG,SAACL,EAAYC,EAAaI,GAC7C,IAAI,IAAIE,EAAE,EAAEA,EAAEP,EAAYQ,OAAO,EAAED,IACjC,IAAI,IAAIE,EAAE,EAAEA,EAAET,EAAYQ,OAAOD,EAAE,EAAEE,IAAI,CAAC,IAAD,IAIvC,IAFqB,UAAAT,EAAYO,GAAGnG,aAAf,eAAsBtB,WAAUkH,EAAYO,GAAGrB,KAAKjG,WAAY,KAChE,UAAA+G,EAAYS,GAAGrG,aAAf,eAAsBtB,WAAUkH,EAAYS,GAAGvB,KAAKjG,WAAY,IAClD,CACjC,IAAIyH,EAAKV,EAAYO,GACrBP,EAAYO,GAAGP,EAAYS,GAC3BT,EAAYS,GAAGC,EAEfA,EAAKT,EAAaM,GAClBN,EAAaM,GAAGN,EAAaQ,GAC7BR,EAAaQ,GAAGC,IAwDhBE,CAAeZ,EAAYC,GAlDZ,SAACD,EAAYC,EAAaI,GAC/C,IAAI,IAAIE,EAAE,EAAEA,EAAEP,EAAYQ,OAAO,EAAED,IACjC,IAAI,IAAIE,EAAE,EAAEA,EAAET,EAAYQ,OAAOD,EAAE,EAAEE,IAAI,CAAC,IAAD,YAIvC,IAFuB,UAAAT,EAAYO,GAAGnG,aAAf,eAAsB+F,cAAtB,UAAkCH,EAAYO,UAA9C,iBAAkC,EAAgBrB,YAAlD,aAAkC,EAAsBjG,YAAY,KACpE,UAAA+G,EAAYS,GAAGrG,aAAf,eAAsB+F,cAAtB,UAAkCH,EAAYS,UAA9C,iBAAkC,EAAgBvB,YAAlD,aAAkC,EAAsBjG,YAAY,IACpD,CACrC,IAAIyH,EAAKV,EAAYO,GACrBP,EAAYO,GAAGP,EAAYS,GAC3BT,EAAYS,GAAGC,EAEfA,EAAKT,EAAaM,GAClBN,EAAaM,GAAGN,EAAaQ,GAC7BR,EAAaQ,GAAGC,IAuChBG,CAAiBb,EAAYC,GAEjC,IAAIa,EAAkB,GAEtB,GAAY,MAATT,EAAI,GACL,IAAI,IAAIE,EAAE,EAAEA,EAAEN,EAAaO,OAAOD,IAChCO,EAAkBb,EAAaM,IAA/B,eAAuCP,EAAYO,SAGrD,IAAI,IAAIA,EAAEN,EAAaO,OAAO,EAAED,GAAG,EAAEA,IACnCO,EAAkBb,EAAaM,IAA/B,eAAuCP,EAAYO,IAIvDvC,EAAU,eAAI8C,KAmDUC,CAAqBhH,EAAEC,OAAOC,QAJpC,UAOI,wBAAQA,MAAM,GAAGQ,SAAoB,KAAV4D,EAA3B,kBACA,wBAAQpE,MAAM,cAAcQ,SAAoB,gBAAV4D,EAAtC,6BACA,wBAAQpE,MAAM,cAAcQ,SAAoB,gBAAV4D,EAAtC,6BACA,wBAAQpE,MAAM,aAAaQ,SAAoB,eAAV4D,EAArC,4BACA,wBAAQpE,MAAM,aAAaQ,SAAoB,eAAV4D,EAArC,4BACA,wBAAQpE,MAAM,eAAeQ,SAAoB,iBAAV4D,EAAvC,8BACA,wBAAQpE,MAAM,eAAeQ,SAAoB,iBAAV4D,EAAvC,uCAMd,yBAASzG,UAAU,kBAAnB,SACYkH,EAAY0B,OAAO,IAAMjI,EACvBuG,EACA5D,IAAQ3C,GAAW,cAAC,EAAD,CAAc2C,IAAKA,U,cCvInD8F,MA9Gf,YAA6B,IAAbC,EAAY,EAAZA,WACR,OACI,kCACI,gCACI,+BACI,oBAAIC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,yBAGR,gCACKD,GAAc3G,OAAOC,KAAK0G,GAAYzG,KAAI,SAAC5B,GACxC,IAAIuI,EAAK,GACT,IAAI,IAAIC,KAAQH,EAAWrI,GAAX,MAAgC,CAEM,IAAD,oCAAjD,IAAIqI,EAAWrI,GAAX,MAAgCwI,GAAMpC,OACtCmC,EAAKpG,KACL,+BACI,oBAAI,aAAW,OAAf,SAAuBqG,IACvB,oBAAI,aAAW,YAAf,SAEQ,UAAAH,EAAWrI,GAAX,MAAgCwI,GAAMhH,aAAtC,SAA6CtB,UAA7C,UACAmI,EAAWrI,GAAX,MAAgCwI,GAAMhH,aADtC,aACA,EAA6CtB,UAE7C,mBAGR,oBAAI,aAAW,YAAf,SAEQ,UAAAmI,EAAWrI,GAAX,MAAgCwI,GAAMhH,aAAtC,SAA6CrB,UAA7C,UACAkI,EAAWrI,GAAX,MAAgCwI,GAAMhH,aADtC,aACA,EAA6CrB,UAE7C,mBAGR,oBAAI,aAAW,WAAf,SAEQ,UAAAkI,EAAWrI,GAAX,MAAgCwI,GAAMhH,aAAtC,SAA6CpB,SAA7C,UACAiI,EAAWrI,GAAX,MAAgCwI,GAAMhH,aADtC,aACA,EAA6CpB,SAE7C,mBAGR,qBAAI,aAAW,QAAf,UACI,2CAEQ,UAAAiI,EAAWrI,GAAX,MAAgCwI,GAAMC,aAAtC,SAA6CvI,UAA7C,UACAmI,EAAWrI,GAAX,MAAgCwI,GAAMC,aADtC,aACA,EAA6CvI,UAE7C,oBAGR,4CAEQ,UAAAmI,EAAWrI,GAAX,MAAgCwI,GAAMC,aAAtC,SAA6CtI,UAA7C,UACAkI,EAAWrI,GAAX,MAAgCwI,GAAMC,aADtC,aACA,EAA6CtI,UAE7C,oBAGR,0CAEQ,UAAAkI,EAAWrI,GAAX,MAAgCwI,GAAMC,aAAtC,SAA6CrI,SAA7C,UACAiI,EAAWrI,GAAX,MAAgCwI,GAAMC,aADtC,aACA,EAA6CC,QAE7C,uBAIZ,qBAAI,aAAW,SAAf,UACI,2CAEQ,UAAAL,EAAWrI,GAAX,MAAgCwI,GAAMG,cAAtC,SAA8CzI,UAA9C,UACAmI,EAAWrI,GAAX,MAAgCwI,GAAMG,cADtC,aACA,EAA8CC,SAE9C,oBAGR,4CAEQ,UAAAP,EAAWrI,GAAX,MAAgCwI,GAAMG,cAAtC,SAA8CxI,UAA9C,UACAkI,EAAWrI,GAAX,MAAgCwI,GAAMG,cADtC,aACA,EAA8CE,SAE9C,oBAGR,0CAEQ,UAAAR,EAAWrI,GAAX,MAAgCwI,GAAMG,cAAtC,SAA8CvI,SAA9C,UACAiI,EAAWrI,GAAX,MAAgCwI,GAAMG,cADtC,aACA,EAA8CvI,SAE9C,2BAQxB,OAAOmI,W,MCyHhBO,MAzNf,WAEI,MAA+BxI,mBAAS,IAAxC,mBAAM+H,EAAN,KAAiBU,EAAjB,KACA,EAA8BzI,mBAAS,IAAvC,mBAAML,EAAN,KAAgB+I,EAAhB,KACA,EAAgC1I,mBAAS,GAAzC,mBAAMD,EAAN,KAAiB4I,EAAjB,KACA,EAA6C3I,mBAAS,QAAtD,mBAAMO,EAAN,KAAwBC,EAAxB,KACA,EAAyBR,mBAAS,IAAlC,mBAAMmF,EAAN,KAAcC,EAAd,KACA,EAAiCpF,mBAAS,IAA1C,mBAAMiF,EAAN,KAAkBC,EAAlB,KACA,EAAyBlF,oBAAS,GAAlC,mBAAM4I,EAAN,KAAcC,EAAd,KACA,EAAkB7I,mBAAS,IAA3B,mBAAMgC,EAAN,KAAUqD,EAAV,KACA,EAA2BrF,oBAAS,GAApC,mBAAOX,EAAP,KAAeiG,EAAf,KAEQwD,EAAeC,cAAfD,WAERnI,qBAAU,WACR4E,EAAInD,kBACHoD,MAAK,SAACC,GACHH,GAAW,GACX,IAAI0D,EAAgB,GACpB,IAAI,IAAMtJ,KAAc+F,EAAIC,KACrBhG,IAAaoJ,IACdE,EAAgBtJ,GAAY+F,EAAIC,KAAKhG,GACrC+I,EAAaO,OAItBrD,OAAM,SAACF,GACNH,GAAW,GACXsB,QAAQC,IAAIpB,MAEd,IAAIwD,EAActH,KAAKuH,MAAMzH,aAAa0H,QAAQ,cAC9CC,EAAgBzH,KAAKuH,MAAMzH,aAAa0H,QAAQ,cACjDF,GACDP,EAAaO,GAEZG,GACDT,EAAcS,KAElB,IAEF,IAuEIvB,EAAqB,SAAC1C,GAC1B,GAAGA,EAAQ,CACP,IAAI2B,EAAY,GACZuC,EAAY,GAEhBjI,OAAOC,KAAK0G,EAAWe,GAAX,OAAiCnC,SAAQ,SAAAuB,GAGhDH,EAAWe,GAAX,MAAgCZ,IAASH,EAAWe,GAAX,MAAgCZ,GAAhC,QACtCH,EAAWe,GAAX,MAAgCZ,GAAhC,QACFH,EAAWe,GAAX,MAAgCZ,GAAhC,MAA+C,CAAC,UAAY,KAGhEmB,EAAYxH,KAAKqG,GACjBpB,EAAYjF,KAAKkG,EAAWe,GAAX,MAAgCZ,OAGnD,IAAIf,EAAIhC,EAAQiC,MAAM,KAEV,cAATD,EAAI,GAvDS,SAACL,EAAYuC,EAAYlC,GAE7C,IAAI,IAAIE,EAAE,EAAEA,EAAEP,EAAYQ,OAAOD,IAC/B,IAAI,IAAIE,EAAE,EAAEA,EAAET,EAAYQ,OAAOC,IAAI,CAAC,IAAD,IACnC,IAAG,UAAAT,EAAYO,GAAGc,aAAf,eAAuBhB,EAAI,MAA3B,UAA+BL,EAAYS,GAAGY,aAA9C,aAA+B,EAAuBhB,EAAI,KAAI,CAC/D,IAAIK,EAAKV,EAAYO,GACrBP,EAAYO,GAAGP,EAAYS,GAC3BT,EAAYS,GAAGC,EAEfA,EAAK6B,EAAYhC,GACjBgC,EAAYhC,GAAGgC,EAAY9B,GAC3B8B,EAAY9B,GAAGC,IA6CbC,CAAgBX,EAAYuC,EAAYlC,GAE3B,aAATA,EAAI,GAzCG,SAACL,EAAYuC,EAAYlC,GAC5C,IAAI,IAAIE,EAAE,EAAEA,EAAEP,EAAYQ,OAAO,EAAED,IACjC,IAAI,IAAIE,EAAE,EAAEA,EAAET,EAAYQ,OAAOD,EAAE,EAAEE,IAAI,CAAC,IAAD,IAIvC,IAFqB,UAAAT,EAAYO,GAAGc,aAAf,eAAsBvI,WAAUG,EAAY,KAC5C,UAAA+G,EAAYS,GAAGY,aAAf,eAAsBvI,WAAUG,EAAY,IAC9B,CACjC,IAAIyH,EAAKV,EAAYO,GACrBP,EAAYO,GAAGP,EAAYS,GAC3BT,EAAYS,GAAGC,EAEfA,EAAK6B,EAAYhC,GACjBgC,EAAYhC,GAAGgC,EAAY9B,GAC3B8B,EAAY9B,GAAGC,IA6BfE,CAAeZ,EAAYuC,GAE3B1B,iBAAiBb,EAAYuC,EAAYlC,GAE7C,IAAImC,EAAsB,eAAER,EAAY,CAAC,MAAQ,KAEjD,GAAY,MAAT3B,EAAI,GACL,IAAI,IAAIE,EAAE,EAAEA,EAAEgC,EAAY/B,OAAOD,IAC/BiC,EAAsBR,GAAtB,MAA2CO,EAAYhC,IAAvD,eAA+DP,EAAYO,SAG7E,IAAI,IAAIA,EAAEgC,EAAY/B,OAAO,EAAED,GAAG,EAAEA,IAClCiC,EAAsBR,GAAtB,MAA2CO,EAAYhC,IAAvD,eAA+DP,EAAYO,IAG/ET,QAAQC,IAAIyC,GAEZb,EAAa,eAAIa,MAGnB,OAAGvB,IAAe1I,EACL,qCACG,0BAASX,UAAU,mBAAnB,UACM,uBAAOuH,KAAK,OACNhF,KAAK,OACLvC,UAAU,cACV6H,YAAY,iBACZxF,MAAOkE,EACPrE,SAAU,SAACC,GACLqE,EAAcrE,EAAEC,OAAOC,OA3HjC,SAACwI,GACvB,GAAG,IAAI/C,KAAK+C,GAAa,IAAI/C,KAAK,eAAiB,IAAIA,KAAK,cAAc,IAAIA,KAAK+C,GAAa,CAC9F,IAAIP,EAAgB,eAAIjB,GAEtB,IAAI,IAAMG,KAAQH,EAAWe,GAAX,MAEdE,EAAgBF,GAAhB,MAAqCZ,GAAMpC,OAD1CoC,IAAOqB,EAOZd,EAAaO,GACbH,GAAU,QAEZA,GAAU,GACVxD,EAAO,uDA4GuBmE,CAAkB3I,EAAEC,OAAOC,UAIzC,sBAAKrC,UAAU,wBAAf,UACE,uBAAOA,UAAU,sBAAjB,SACO,+CACP,yBACIA,UAAU,gBACVkC,SAAU,SAACC,GACTuE,EAAUvE,EAAEC,OAAOC,OACnB8G,EAAqBhH,EAAEC,OAAOC,QAJpC,UAOI,wBAAQA,MAAM,GAAGQ,SAAoB,KAAV4D,EAA3B,kBACA,wBAAQpE,MAAM,cAAcQ,SAAoB,gBAAV4D,EAAtC,6BACA,wBAAQpE,MAAM,cAAcQ,SAAoB,gBAAV4D,EAAtC,6BACA,wBAAQpE,MAAM,aAAaQ,SAAoB,eAAV4D,EAArC,6BACA,wBAAQpE,MAAM,aAAaQ,SAAoB,eAAV4D,EAArC,mCAGJ,qBAAKzG,UAAU,kBAAf,SACI,yBAAQA,UAAU,oBACRkC,SAAU,SAACC,GACPL,EAAoBK,EAAEC,OAAOC,QAF3C,UAII,wBAAQA,MAAM,OAAd,kBAEIpB,GAAayB,OAAOC,KAAK1B,GAAW2B,KAAI,SAACN,GACrC,OAAO,wBAAQD,MAAOC,EAAeO,SAAUhB,IAAoBS,EAA5D,SAAuFA,eAQpH,yBAAStC,UAAU,kBAAnB,SACGkK,EACC,cAAC,EAAD,CAAOb,WAAYA,IAClB/F,GAAQ,cAAC,EAAD,CAAcA,IAAKA,SAKrC,qCACC,cAAC,EAAD,CAAe3C,QAASA,IACxB2C,GAAQ,cAAC,EAAD,CAAcA,IAAKA,QCtN1ByH,MANf,WAEE,OAAQ,qBAAK7K,MAAM,qB,MCuCN8K,MAnBf,SAAaxK,GAGX,OACE,mCACE,eAAC,IAAD,WACA,cAAC,EAAD,IACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyK,OAAK,EAACC,KAAK,IAAIC,UAAWjF,IACjC,cAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,oBAAoBC,UAAWjF,IACjD,cAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,eAAeC,UAAWrB,IAC5C,cAAC,IAAD,CAAOqB,UAAWJ,OAEpB,cAAC,EAAD,UCnCRK,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.80fb90d8.chunk.js","sourcesContent":["import {React,createRef} from \"react\";\n\nimport {useHistory,Link } from \"react-router-dom\";\n\nimport \"./style.css\";\n\n// import logo from \"../../img/logo.png\";\n// import userImg from \"../../img/user.svg\";\n\n\nfunction Nav({user}) {\n\n  const nav_ref=createRef();\n  const crosslines_ref=createRef();\n  const line_ref=createRef();\n\n\n  function toggle() {\n    nav_ref.current.classList.toggle(\"nav_list_show\");\n    crosslines_ref.current.classList.toggle(\"crosslines_show\");\n    line_ref.current.classList.toggle(\"lines_hide\");\n  }\n\n  let nav_link;\n\n  // <img src={logo}/> <p>Corona Tracker</p>  \n  return ( <div className=\"nav\">\n              <div className=\"nav-brand\">\n                    <Link to=\"/\">  \n                            <p><i class=\"fas fa-shield-virus\"></i>Corona Tracker<i class=\"fas fa-shield-virus\"></i></p>              \n                    </Link>\n              </div>\n\n              <div className=\"lines\" onClick={toggle} ref={line_ref}>  \n                <div className=\"smallline\">\n                </div>\n                <div className=\"smallline\">\n                </div>\n                <div className=\"smallline\">\n                </div>\n              </div>\n\n              <div className=\"nav_list\" ref={nav_ref}>\n                <div className=\"crosslines\" onClick={toggle} ref={crosslines_ref}>\n                </div>\n                \n              </div>\n        </div>);\n\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer(){\n\nreturn ( \n\t<div className=\"footer_container\" id=\"contacts\">\n  \t\t\t<div className=\"copyright\"> ©Copyright 2022 K.BOOPATHI All Rights Reserved </div>\n    </div>);\n        \n}\n\nexport default Footer;\n","import React from \"react\";\n\nimport \"./style.css\";\n\nfunction SquareLoader(props) {\n  return (\n    <div\n      className={\n        props.position ? \"loader-wrapper position-static\" : \"loader-wrapper\"\n      }\n      style={\n        props.loading\n          ? { display: \"flex\", marginTop: \"0\", ...props.style }\n          : { display: \"none\", ...props.style }\n      }\n    >\n      <div className=\"square-loader\">\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n}\n\nexport default SquareLoader;\n","import {React,useState,useEffect} from \"react\";\nimport {useHistory} from \"react-router-dom\";\n\nimport \"./style.css\";\n\nfunction StateCard({\n                    state_short_name,\n                    state_name,\n                    districts,\n                    confirmed,\n                    recovered,\n                    deceased,\n                    population\n                  }){\n\n    \n    const [d_confirmed,setConfirmed]=useState(confirmed);\n    const [d_recovered,setRecovered]=useState(recovered);\n    const [d_deceased,setDeceased]=useState(deceased);\n    const [selected_district,setSelectedDistrict]=useState(\"none\");\n\n    const history=useHistory();\n    \n    useEffect(()=>{\n        setConfirmed(confirmed);\n        setRecovered(recovered);\n        setDeceased(deceased);\n    },[confirmed,recovered,deceased])\n    \n\n    const ChangeToDistrictData=(district_name)=>{\n        for(const name in districts){\n            if(name===district_name){\n               setConfirmed(districts[name].total.confirmed?districts[name].total.confirmed:\"Data Not Found\")\n               setRecovered(districts[name].total.recovered?districts[name].total.recovered:\"Data Not Found\")\n               setDeceased(districts[name].total.deceased?districts[name].total.deceased:\"Data Not Found\")\n            }\n        }\n        //if user select none we need show the state data\n        if(district_name===\"none\"){\n            setConfirmed(confirmed);\n            setRecovered(recovered);\n            setDeceased(deceased);\n        }\n    }\n    const storeToLocalStorage=(state_short_name)=>{\n        localStorage.setItem(\"districts\",JSON.stringify(districts));\n        localStorage.setItem(\"population\",population);\n\n        history.push(`/${state_short_name}`);\n        \n    }\n  return ( \n    <>\n        <div className=\"state_card\">\n            <div className=\"state_card-head\">\n                <p>{state_name}</p>\n                <select className=\"state_card-select\" \n                          onChange={(e)=>{\n                              setSelectedDistrict(e.target.value);\n                              ChangeToDistrictData(e.target.value);\n                              }}>\n                     <option value=\"none\">None</option>\n                    {\n                        \n                         districts && Object.keys(districts).map((district_name)=>{\n                            return(<option value={district_name} selected={selected_district===district_name?true:false}>{district_name}</option>)\n                        })\n                    \n                    }\n                </select>\n            </div>\n        <div className=\"state_body-wrapper\">\n            <div className=\"state_card-total\">\n                <p>Total</p>\n                <p><i class=\"fas fa-check-circle\" style={{color:\"brown\"}}></i>Confirmed: {d_confirmed}</p>\n                <p><i class=\"fas fa-heartbeat\" style={{color:\"green\"}}></i>Recovered: {d_recovered}</p>\n                <p><i class=\"fas fa-exclamation-circle\" style={{color:\"red\"}}></i>Deceased: {d_deceased}</p>\n            </div>\n            <div className=\"state_card_link\">\n                <div> \n                <i class=\"fas fa-greater-than\"  \n                   onClick={()=>{\n                    storeToLocalStorage(state_short_name)\n                    }\n                }></i>\n                </div>\n            </div>\n        </div>\n        </div>\n    </>);\n\n    }\n\nexport default StateCard;\n","import {React} from \"react\";\n\nimport \"./style.css\";\n\nfunction NoResultCard({msg}){\n  return ( \n        <div className=\"noresult_card\">\n            <p>{msg}</p>\n        </div>\n  )\n\n    }\n\nexport default NoResultCard;\n","import axios from \"axios\";\n\nexport default {\n  getStates:function(){\n    return axios.get(\"https://data.covid19india.org/v4/min/data.min.json\");\n  },\n  getStatesByDate:function(){\n    return axios.get(\"https://data.covid19india.org/v4/min/timeseries.min.json\");\n  }\n  \n};","import axios from \"axios\";\n\nimport coronaService from \"./coronaService\";\n\nexport default {\n  getStates:coronaService.getStates,\n  getStatesByDate:coronaService.getStatesByDate\n  \n};\n\n","export default{\n    AN: \"Andaman and Nicobar Islands\",\n    AP: \"Andhra Pradesh\",\n    AR: \"Arunachal Pradesh\",\n    AS: \"Assam\",\n    BR: \"Bihar\",\n    CH: \"Chandigarh\",\n    CT: \"Chhattisgarh\",\n    DL: \"Delhi\",\n    DN: \"Dadra and Nagar Haveli and Daman and Diu\",\n    GA: \"Goa\",\n    GJ: \"Gujarat\",\n    HP: \"Himachal Pradesh\",\n    HR: \"Haryana\",\n    JH: \"Jharkhand\",\n    JK: \"Jammu and Kashmir\",\n    KA: \"Karnataka\",\n    KL: \"Kerala\",\n    LA: \"Ladakh\",\n    LD: \"Lakshadweep\",\n    MH: \"Maharashtra\",\n    ML: \"Meghalaya\",\n    MN: \"Manipur\",\n    MP: \"Madhya Pradesh\",\n    MZ: \"Mizoram\",\n    NL: \"Nagaland\",\n    OR: \"Odisha\",\n    PB: \"Punjab\",\n    PY: \"Puducherry\",\n    RJ: \"Rajasthan\",\n    SK: \"Sikkim\",\n    TG: \"Telangana\",\n    TN: \"Tamil Nadu\",\n    TR: \"Tripura\",\n    TT:\"Trinidad and Tobago\",\n    UN: \"State Unassigned\",\n    UP: \"Uttar Pradesh\",\n    UT: \"Uttarakhand\",\n    WB: \"West Bengal\"\n}\n","import {React,useEffect,useState} from \"react\";\nimport \"./style.css\";\n\nimport SquareLoader from \"../../components/SquareLoader\";\nimport StateCard from \"../../components/StateCard\";\nimport NoResultCard from \"../../components/NoResultCard\";\n\nimport API from \"../../utils/API\";\nimport STATE_NAMES from \"../../utils/stateNames\";\n\nimport errorHandler from \"../../utils/errorHandler\";\n\n\nfunction Home() {\n\n    const[states,setStates]=useState({});\n    const[search_state,setSearchState]=useState(\"\");\n    const[filter_date,setFilterDate]=useState(\"\");\n    const[sort_by,setSortBy]=useState(\"\");\n    const[msg,setMsg]=useState(\"\");\n  \n    const [loading,setLoading]=useState(true);\n\n    useEffect(()=>{\n      API.getStates()\n      .then((res)=>{\n          setLoading(false);\n          setStates(res.data); \n      })\n      .catch((res)=>{\n        setLoading(false);\n        \n      });\n  },[])\n\n  const filterState=(search_state)=>{\n    let new_states={...states}\n    let isFind=false;\n    Object.keys(states).map((state)=>{\n      if(STATE_NAMES[state].toLowerCase().startsWith(search_state.toLowerCase())){\n        isFind=true;\n        new_states[state].isHide=false;\n      }else{\n        new_states[state].isHide=true;\n      }\n      setStates({...new_states});\n      //if no state find set this msg\n      if(!isFind){\n        setMsg(`No Sate Found With Name ${search_state}`)\n      }\n    })\n\n  }\n  \n  const getStatesByDate=(filter_date)=>{\n    if(new Date(filter_date)>new Date(\"2020-03-26\") && new Date(\"2020-10-11\")>new Date(filter_date))\n    {\n      setLoading(true);\n      API.getStatesByDate()\n        .then((res)=>{\n            setLoading(false);\n            let new_state={}\n            let empty_data={total:{confirmed:\"Data Not Found\",recovered:\"Data Not Found\",deceased:\"Data Not Found\"}}\n            Object.keys(res.data).forEach((state)=>{\n              //if we have data append it else say no data found\n              new_state[state]=res.data[state][\"dates\"][filter_date]?res.data[state][\"dates\"][filter_date]:empty_data;\n              //appending districts data to new state\n              new_state[state][\"districts\"]={...states[state]?.[\"districts\"]}\n\n            })\n            setStates(new_state); \n        })\n        .catch((res)=>{\n          setLoading(false);\n          console.log(res)\n        });\n    }else{\n      setStates({});\n      setMsg(\"Plse try the date between 2020-03-26 and 2020-10-11\");\n    }\n  }\n  const sortByConfirmed=(states_meta,states_names,key)=>{\n    for(let i=0;i<states_meta.length;i++){\n      for(let j=0;j<states_meta.length;j++){\n        if(states_meta[i].total?.[key[0]]<states_meta[j].total?.[key[0]]){\n  \n          let temp=states_meta[i];\n          states_meta[i]=states_meta[j];\n          states_meta[j]=temp;\n\n          temp=states_names[i];\n          states_names[i]=states_names[j];\n          states_names[j]=temp;\n        }\n      }\n    }\n  }\n\n  const sortByAffected=(states_meta,states_names,key)=>{\n    for(let i=0;i<states_meta.length-1;i++){\n      for(let j=0;j<states_meta.length-i-1;j++){\n        //confirmed case divide by total population * 100 give affected %\n        let state1_affected=(states_meta[i].total?.confirmed/states_meta[i].meta.population)*100;\n        let state2_affected=(states_meta[j].total?.confirmed/states_meta[j].meta.population)*100\n        if(state1_affected<state2_affected){\n          let temp=states_meta[i];\n          states_meta[i]=states_meta[j];\n          states_meta[j]=temp;\n\n          temp=states_names[i];\n          states_names[i]=states_names[j];\n          states_names[j]=temp;\n        }\n      }\n    }\n\n  }\n  const sortByVaccinated=(states_meta,states_names,key)=>{\n    for(let i=0;i<states_meta.length-1;i++){\n      for(let j=0;j<states_meta.length-i-1;j++){\n        //vaccinated does 1  divide by total population * 100 give vaccinated %\n        let state1_vaccinated=(states_meta[i].total?.vaccinated1/states_meta[i]?.meta?.population)*100;\n        let state2_vaccinated=(states_meta[j].total?.vaccinated1/states_meta[j]?.meta?.population)*100\n        if(state1_vaccinated<state2_vaccinated){\n          let temp=states_meta[i];\n          states_meta[i]=states_meta[j];\n          states_meta[j]=temp;\n\n          temp=states_names[i];\n          states_names[i]=states_names[j];\n          states_names[j]=temp;\n        }\n      }\n    }\n\n  }\n  const sortByUserPreference=(sort_by)=>{\n    if(sort_by){\n        let states_meta=[];\n        let states_names=[];\n\n        Object.keys(states).sort().forEach(state_name=>{\n          debugger;\n          //for some date there is no confirmed,etc so we appending 0 for it for sorting purpose\n          if(states[state_name] && states[state_name][\"total\"]){\n            if(!states[state_name][\"total\"]){\n              states[state_name][\"total\"]={confirmed:0,vaccinated1:0,vaccinated2:0};\n            }\n            if(!states[state_name][\"total\"][\"confirmed\"]){\n              states[state_name][\"total\"][\"confirmed\"]=0;\n            }\n            if(!states[state_name][\"total\"][\"deceased\"]){\n              states[state_name][\"total\"][\"deceased\"]=0;\n            }\n            if(!states[state_name][\"total\"][\"recovered\"]){\n              states[state_name][\"total\"][\"recovered\"]=0;\n            }\n          }\n          states_names.push(state_name);\n          states_meta.push(states[state_name])\n          \n        });\n        let key=sort_by.split(\"-\");\n        if(key[0]===\"confirmed\"){\n            sortByConfirmed(states_meta,states_names,key)\n        }\n        else if(key[0]===\"affected\"){\n          sortByAffected(states_meta,states_names,key)\n        }else{\n          sortByVaccinated(states_meta,states_names,key)\n        }\n      let new_sorted_states={};\n      //if asec travel from start else in reverse\n      if(key[1]===\"a\"){\n        for(let i=0;i<states_names.length;i++){\n          new_sorted_states[states_names[i]]={...states_meta[i]};\n        }\n      }else{\n        for(let i=states_names.length-1;i>=0;i--){\n          new_sorted_states[states_names[i]]={...states_meta[i]};\n        }\n      }\n      //assingin new states\n      setStates({...new_sorted_states});\n    }\n  }\n  const states_card=[]\n  //iterating the states\n  Object.keys(states).map((state)=>{\n    //when user searching by state name\n    if(!states[state].isHide){\n     states_card.push(<StateCard \n              state_short_name={state}\n              state_name={STATE_NAMES[state]} \n              districts={states[state]?.districts}\n              confirmed={states[state]?.total?.confirmed}\n              recovered={states[state]?.total?.recovered}\n              deceased={states[state]?.total?.deceased}\n              population={states[state]?.meta?.population}\n          />)\n    }\n  })\n    return ( <>\n              <SquareLoader  loading={loading}/>\n              <section className=\"search_container\">\n                    <input type=\"text\" \n                           name=\"search_input\" \n                           className=\"search_input\" \n                           onChange={(e)=>{\n                              setSearchState(e.target.value);\n                              filterState(e.target.value)\n                        \n                            }}\n                           value={search_state}\n                           placeholder=\"SEARCH HERE...\"\n                    />  \n                    <input type=\"date\" \n                           name=\"date\" \n                           className=\"search_date\" \n                           placeholder=\"Search by date\" \n                           value={filter_date}\n                           onChange={(e)=>{\n                                setFilterDate(e.target.value);\n                                getStatesByDate(e.target.value);\n                              }}\n                    />\n\n                    <div className=\"filter_option-wrapper\">\n                        <label className=\"filter_option-label\">\n                               <span>Sort By: </span></label>\n                        <select\n                            className=\"filter_option\" \n                            onChange={(e)=>{\n                              setSortBy(e.target.value);\n                              sortByUserPreference(e.target.value);\n                            }\n                        }>\n                            <option value=\"\" selected={sort_by===\"\"?true:false}>None</option>\n                            <option value=\"confirmed-a\" selected={sort_by===\"confirmed-a\"?true:false}>Confirmed(asec)</option>\n                            <option value=\"confirmed-d\" selected={sort_by===\"confirmed-d\"?true:false}>Confirmed(desc)</option>\n                            <option value=\"affected-a\" selected={sort_by===\"affected-a\"?true:false}>Affected(asec)</option>\n                            <option value=\"affected-d\" selected={sort_by===\"affected-d\"?true:false}>Affected(desc)</option>\n                            <option value=\"vaccinated-a\" selected={sort_by===\"vaccinated-a\"?true:false}>Vaccinated(asec)</option>\n                            <option value=\"vaccinated-d\" selected={sort_by===\"vaccinated-d\"?true:false}>Vaccinated(desc)</option>\n                        </select>\n                    </div>\n              </section>\n\n\n              <section className=\"state_container\">\n                        {(states_card.length>0 && !loading )? \n                            states_card:\n                            msg && !loading && <NoResultCard msg={msg}/>\n                        }\n              </section>\n      </>);\n}\n\nexport default Home;\n","import {React,useState} from \"react\";\nimport {Link } from \"react-router-dom\";\n\nimport NoResultCard from \"../NoResultCard\";\n\nimport \"./style.css\";\n\nfunction Table({state_data}){\n        return ( \n            <table>\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Date</th>\n                        <th scope=\"col\">Confirmed</th>\n                        <th scope=\"col\">Recovered</th>\n                        <th scope=\"col\">Deceased</th>\n                        <th scope=\"col\">Delta</th>\n                        <th scope=\"col\">Delta7</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {state_data && Object.keys(state_data).map((state_name)=>{\n                        let rows=[]\n                        for(let date in state_data[state_name][\"dates\"]){\n                            //for filtering based on date\n                            if(!state_data[state_name][\"dates\"][date].isHide){\n                                rows.push(\n                                <tr>\n                                    <td data-label=\"date\">{date}</td>\n                                    <td data-label=\"Confirmed\">\n                                        {\n                                            state_data[state_name][\"dates\"][date].total?.confirmed?\n                                            state_data[state_name][\"dates\"][date].total?.confirmed\n                                            :\n                                            \"Data Not Found\"\n                                        }\n                                    </td>\n                                    <td data-label=\"Recovered\">\n                                        {\n                                            state_data[state_name][\"dates\"][date].total?.recovered?\n                                            state_data[state_name][\"dates\"][date].total?.recovered\n                                            :\n                                            \"Data Not Found\"\n                                        }\n                                    </td>\n                                    <td data-label=\"Deceased\">\n                                        {\n                                            state_data[state_name][\"dates\"][date].total?.deceased?\n                                            state_data[state_name][\"dates\"][date].total?.deceased\n                                            :\n                                            \"Data Not Found\"\n                                        }\n                                    </td>\n                                    <td data-label=\"Delta\">\n                                        <p>Confirmed: \n                                            {\n                                                state_data[state_name][\"dates\"][date].delta?.confirmed?\n                                                state_data[state_name][\"dates\"][date].delta?.confirmed\n                                                :\n                                                \"Data Not Found\"\n                                            }\n                                        </p>\n                                        <p> Recovered:\n                                            {\n                                                state_data[state_name][\"dates\"][date].delta?.recovered?\n                                                state_data[state_name][\"dates\"][date].delta?.recovered\n                                                :\n                                                \"Data Not Found\"\n                                            }\n                                        </p>\n                                        <p>Deceased:\n                                            {\n                                                state_data[state_name][\"dates\"][date].delta?.deceased?\n                                                state_data[state_name][\"dates\"][date].delta?.decease\n                                                :\n                                                \"Data Not Found\"\n                                            }\n                                        </p>\n                                    </td>\n                                    <td data-label=\"Delta7\">\n                                        <p>Confirmed: \n                                            {\n                                                state_data[state_name][\"dates\"][date].delta7?.confirmed?\n                                                state_data[state_name][\"dates\"][date].delta7?.confired\n                                                :\n                                                \"Data Not Found\"\n                                            }\n                                        </p>\n                                        <p> Recovered:\n                                            {\n                                                state_data[state_name][\"dates\"][date].delta7?.recovered?\n                                                state_data[state_name][\"dates\"][date].delta7?.recoveed\n                                                :\n                                                \"Data Not Found\"\n                                            }\n                                        </p>\n                                        <p>Deceased:\n                                            {\n                                                state_data[state_name][\"dates\"][date].delta7?.deceased?\n                                                state_data[state_name][\"dates\"][date].delta7?.deceased\n                                                :\n                                                \"Data Not Found\"\n                                            }\n                                        </p>\n                                    </td>\n                                </tr>\n                                )\n                            }\n                        }\n                        return rows;\n                        })\n                    }\n                </tbody>\n            </table>\n            );\n    }\n\nexport default Table;\n","import {React,useEffect,useState} from \"react\";\nimport {useParams } from \"react-router-dom\";\n\nimport SquareLoader from \"../../components/SquareLoader\";\nimport Table from \"../../components/Table\";\nimport NoResultCard from \"../../components/NoResultCard\";\n\nimport API from \"../../utils/API\";\nimport errorHandler from \"../../utils/errorHandler\";\n\nimport \"./style.css\";\n\n\nfunction StateDetail() {\n\n    const[state_data,setStateData]=useState({});\n    const[districts,setDistricts]=useState({});\n    const[population,setPopulation]=useState(1);\n    const[selected_district,setSelectedDistrict]=useState(\"none\");\n    const[sort_by,setSortBy]=useState(\"\");\n    const[filter_date,setFilterDate]=useState(\"\");\n    const[is_find,setIsFind]=useState(true)\n    const[msg,setMsg]=useState(\"\");\n    const [loading,setLoading]=useState(true);\n\n    const { STATE_NAME } = useParams();\n\n    useEffect(()=>{\n      API.getStatesByDate()\n      .then((res)=>{\n          setLoading(false);\n          let temp_state_data={}\n          for(const state_name in res.data){\n              if(state_name===STATE_NAME){\n                temp_state_data[state_name]=res.data[state_name];\n                setStateData(temp_state_data);\n              }\n          }  \n      })\n      .catch((res)=>{\n        setLoading(false);\n        console.log(res)\n      });\n      let temp_district=JSON.parse(localStorage.getItem(\"districts\"));\n      let temp_population=JSON.parse(localStorage.getItem(\"poulation\"));\n      if(temp_district){\n        setDistricts(temp_district);\n      }\n      if(temp_population){\n        setPopulation(temp_population);\n      }\n  },[])\n\n  const filterStateByDate=(search_date)=>{\n    if(new Date(search_date)>new Date(\"2020-03-26\") && new Date(\"2020-10-11\")>new Date(search_date)){\n      let temp_state_data={...state_data};\n      debugger;\n        for(const date in state_data[STATE_NAME][\"dates\"]){\n          if(date===search_date){\n            temp_state_data[STATE_NAME][\"dates\"][date].isHide=false;\n          }\n          else{\n            temp_state_data[STATE_NAME][\"dates\"][date].isHide=true;\n          }\n        }\n        setStateData(temp_state_data);\n        setIsFind(true);\n    }else{\n      setIsFind(false);\n      setMsg(\"Plse try the date between 2020-03-26 and 2020-10-11\")\n    }\n  }\n  const ChangeToDistrictData=(district_name)=>{\n    for(const name in districts){\n        if(name===district_name){\n           setConfirmed(districts[name].total.confirmed?districts[name].total.confirmed:\"Data Not Found\")\n           setRecovered(districts[name].total.recovered?districts[name].total.recovered:\"Data Not Found\")\n           setDeceased(districts[name].total.deceased?districts[name].total.deceased:\"Data Not Found\")\n        }\n    }\n    //if user select none we need show the state data\n    if(district_name===\"none\"){\n        setConfirmed(confirmed);\n        setRecovered(recovered);\n        setDeceased(deceased);\n    }\n}\n\nconst sortByConfirmed=(states_meta,states_date,key)=>{\n  \n  for(let i=0;i<states_meta.length;i++){\n    for(let j=0;j<states_meta.length;j++){\n      if(states_meta[i].delta?.[key[0]]<states_meta[j].delta?.[key[0]]){\n        let temp=states_meta[i];\n        states_meta[i]=states_meta[j];\n        states_meta[j]=temp;\n\n        temp=states_date[i];\n        states_date[i]=states_date[j];\n        states_date[j]=temp;\n      }\n    }\n  }\n}\n\nconst sortByAffected=(states_meta,states_date,key)=>{\n  for(let i=0;i<states_meta.length-1;i++){\n    for(let j=0;j<states_meta.length-i-1;j++){\n      //confirmed case divide by total population * 100 give affected %\n      let state1_affected=(states_meta[i].delta?.confirmed/population)*100;\n      let state2_affected=(states_meta[j].delta?.confirmed/population)*100\n      if(state1_affected<state2_affected){\n        let temp=states_meta[i];\n        states_meta[i]=states_meta[j];\n        states_meta[j]=temp;\n\n        temp=states_date[i];\n        states_date[i]=states_date[j];\n        states_date[j]=temp;\n      }\n    }\n  }\n\n}\nconst sortByUserPreference=(sort_by)=>{\n  if(sort_by){\n      let states_meta=[];\n      let states_date=[];\n\n      Object.keys(state_data[STATE_NAME][\"dates\"]).forEach(date=>{\n       \n        //for some date there is no confirmed so we appending 0 for it for sorting purpose\n        if(state_data[STATE_NAME][\"dates\"][date] && state_data[STATE_NAME][\"dates\"][date][\"delta\"]){\n          if(!state_data[STATE_NAME][\"dates\"][date][\"delta\"])  {\n            state_data[STATE_NAME][\"dates\"][date][\"delta\"]={\"confirmed\":0};\n          }\n        }\n        states_date.push(date);\n        states_meta.push(state_data[STATE_NAME][\"dates\"][date]);\n      });\n\n      let key=sort_by.split(\"-\");\n\n      if(key[0]===\"confirmed\"){\n          sortByConfirmed(states_meta,states_date,key)\n      }\n      else if(key[0]===\"affected\"){\n        sortByAffected(states_meta,states_date,key)\n      }else{\n        sortByVaccinated(states_meta,states_date,key)\n      }\n    let new_sorted_state_data={[STATE_NAME]:{\"dates\":{}}};\n    //if asec travel from start else in reverse\n    if(key[1]===\"a\"){\n      for(let i=0;i<states_date.length;i++){\n        new_sorted_state_data[STATE_NAME][\"dates\"][states_date[i]]={...states_meta[i]};\n      }\n    }else{\n      for(let i=states_date.length-1;i>=0;i--){\n        new_sorted_state_data[STATE_NAME][\"dates\"][states_date[i]]={...states_meta[i]};\n      }\n    }\n    console.log(new_sorted_state_data)\n    //assingin new states data\n    setStateData({...new_sorted_state_data});\n  }\n}\n  if(state_data && !loading ){\n      return ( <>\n                  <section className=\"search_container\">\n                        <input type=\"date\" \n                              name=\"date\" \n                              className=\"search_date\" \n                              placeholder=\"Search by date\" \n                              value={filter_date}\n                              onChange={(e)=>{\n                                    setFilterDate(e.target.value);\n                                    filterStateByDate(e.target.value);\n                                  }}\n                        />\n\n                      <div className=\"filter_option-wrapper\">\n                        <label className=\"filter_option-label\">\n                               <span>Sort By: </span></label>\n                        <select\n                            className=\"filter_option\" \n                            onChange={(e)=>{\n                              setSortBy(e.target.value);\n                              sortByUserPreference(e.target.value);\n                            }\n                        }>\n                            <option value=\"\" selected={sort_by===\"\"?true:false}>None</option>\n                            <option value=\"confirmed-a\" selected={sort_by===\"confirmed-a\"?true:false}>Confirmed(asec)</option>\n                            <option value=\"confirmed-d\" selected={sort_by===\"confirmed-d\"?true:false}>Confirmed(desc)</option>\n                            <option value=\"affected-a\" selected={sort_by===\"affected-a\"?true:false}>Affected%(asec)</option>\n                            <option value=\"affected-d\" selected={sort_by===\"affected-d\"?true:false}>Affected%(desc)</option>\n                        </select>\n                    </div>\n                        <div className=\"state_card-head\">\n                            <select className=\"state_card-select\" \n                                      onChange={(e)=>{\n                                          setSelectedDistrict(e.target.value);\n                                          }}>\n                                <option value=\"none\">None</option>\n                                {\n                                    districts && Object.keys(districts).map((district_name)=>{\n                                        return(<option value={district_name} selected={selected_district===district_name?true:false}>{district_name}</option>)\n                                    })\n                                }\n                            </select>\n                        </div>\n                  </section>\n\n\n                  <section className=\"state_container\">\n                    {is_find ?\n                      <Table state_data={state_data}/>:\n                      (msg &&  <NoResultCard msg={msg}/>)\n                    }\n                  </section>  \n          </>);\n    }else{\n      return(<>\n              <SquareLoader  loading={loading}/>\n             {msg &&  <NoResultCard msg={msg}/>}\n             </>\n             );\n    }\n}\n\nexport default StateDetail;\n","import React from \"react\";\n\n// import image2 from \"../../img/image2.svg\";\n\nfunction NotFound (){\n  \n  return (<div class=\"error_container\">  \n\t\t</div>);\n}\n\nexport default NotFound;\n{/* <img src={image2} Style=\"height:90vh;width: 90vw;\"/> */}\n","\n\nimport {React,useState} from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\n\n//components\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\nimport SquareLoader from './components/SquareLoader';\n\n//pages\nimport Home from './pages/Home';\nimport StateDetail from './pages/StateDetail';\n\nimport NotFound from './pages/NotFound';\n\nimport API from \"./utils/API\";\n\n//styles\nimport './App.css';\n\nfunction App(props) {\n\n\n  return (\n    <>\n      <Router>\n      <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route exact path=\"/coronatracker2.0\" component={Home}/>\n          <Route exact path=\"/:STATE_NAME\" component={StateDetail}/>\n          <Route component={NotFound}/>\n        </Switch>\n        <Footer/>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\t\t\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}